#print decision trees via graphs
    def export_graph(self, node=None, graph=None):
        if node is None:
            node = self.base
            graph = Digraph()

        if node.value is not None:
            graph.node(str(id(node)), f"Leaf: {node.value}\nAcc: {node.accuracy:.2f}")
        else:
            graph.node(str(id(node)), f"Feature {node.feature}\nThreshold: {node.threshold:.2f}\nGain: {node.information_gain:.2f}")
            if node.left:
                graph.edge(str(id(node)), str(id(node.left)), "Left")
                self.export_graph(node.left, graph)
            if node.right:
                graph.edge(str(id(node)), str(id(node.right)), "Right")
                self.export_graph(node.right, graph)

        return graph
